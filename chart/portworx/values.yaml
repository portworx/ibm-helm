# Please uncomment and specify values for these options as per your requirements.

kvdb:                                 # The KVDB endpoint. Should be in the format etcd:http://<your-kvdb-endpoint>:2379.
                                      # If there are multiple endpoints they need to be ";" seperated.
                                      # the default value is empty since it requires to be explicity set using either the --set option of -f values.yaml.
clusterName: mycluster                # This is the default. please change it to your cluster name.

storage:
  usefileSystemDrive: false           # true/false Instructs PX to use an unmounted Drive even if it has a filesystem.
  usedrivesAndPartitions: false       # Defaults to false. Change to true and PX will use unmounted drives and partitions.
  drives: none                        # NOTE: This is a ";" seperated list of drives. For eg: "/dev/sda;/dev/sdb;/dev/sdc" Defaults to use -A switch.
  journalDevice: none
  metadataSize: 0

network:
  dataInterface: none                # Name of the interface <ethX>
  managementInterface: none          # Name of the interface <ethX>

pxSecretsNamespace: portworx         # Defaults to portworx, it specifies the namespace in which you create the px secrets
secretType: none                     # Defaults to None, but can be aws-kms/vault/k8s/kvdb/ibm-kp
envVars: none                        # NOTE: This is a ";" seperated list of environment variables. For eg: MYENV1=myvalue1;MYENV2=myvalue2
advOpts: none

storkVersion: 25.3.2                 # Defaults to empty, operator will get the version from manifest based on portworx image version.

customRegistryURL: 
registrySecret:

icrRegistry: 
icrSecret: 
isOCP: false

aut: false                           # Enable AutoPilot
csi: true                            # Enable CSI
csiCloudDrive: false

internalKVDB: false                  # internal KVDB
kvdbDevice:                          # specify a separate device to store KVDB data, only used when internalKVDB is set to true
internalKvdbTls: false               # Enable TLS for internal KVDB
migrateToKvdbTls: false              # Enable migration to KVDB TLS, requires internalKvdbTls to be true

maxStorageNodesPerZone: 1            # The maximum number of storage nodes desired per zone, in case of cloud drive provisioning

installCertManager: false            # Install PX managed cert-manager

etcd:
  secret: none                       # Secret name where the username, password and CA cert for ETCD authentication is stored

imageVersion: 3.3.1.3                  # Version of the PX Image.
pxOperatorImageVersion: 25.2.2       # Version of the PX operator image.
changePortRange: false               # change start range to 17000
enablePVCController: false           # enable PVC Controller when running on OCP 4.3 or above or on IKS VPC Gen2

telemetry: false                     # Telemetry support

serviceAccount:
  hook:
    create: true
    name:

deleteStrategy:                      # Delete strategy for the portworx cluster
  type:                              # Valid values: Uninstall, UninstallAndWipe

nonDisruptivek8sUpgrade: false          # By default, S&P upgrades are disabled. To enable them, set this to true
skipHealthChecks: false                 # Used to skip health checks. By default, health checks are enabled. Set this to true to disable health checks

updateStrategy:   
  type:                                   # portworx supports the following update strategies- RollingUpdate and OnDelete

  # maxUnavailable and minReadySeconds applicable only on selecting type RollingUpdate
  disruption: 
    allow:                                # This field is used to enable smart and parallel upgrade. Smart upgrade is disabled by default,
                                          # Enable it by setting to false. we can use the `maxUnavailable` field to control the maximum number of Portworx nodes that can be upgraded at a time.

  maxUnavailable:                         # Similarly to how Kubernetes rolling update strategies work, this field specifies how many nodes can be down at any given time.
  minReadySeconds:                        # During rolling updates, this flag will wait for all pods to be ready for at least minReadySeconds before updating the next batch of pods,
                                          # where the size of the pod batch is specified through the spec.updateStrategy.rollingUpdate.maxUnavailable flag.

  autoUpdateComponents:                   # Indicates the update strategy for the component images
                                          # valid values None,Once,Always

# Use these fields for manual installation of Portworx
createOSBSecret: false               # Create the OSB secret
resourceCrn: none                    # The resource CRN for the Portworx cluster
planId: none                        # The plan ID for the Portworx cluster

